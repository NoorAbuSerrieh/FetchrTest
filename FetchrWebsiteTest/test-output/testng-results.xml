<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="72" passed="66" failed="6" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-07-16T13:50:13Z" name="FetchrWebsite" finished-at="2021-07-16T14:03:26Z" duration-ms="792137">
    <groups>
    </groups>
    <test started-at="2021-07-16T13:50:13Z" name="End to End Test on chrome" finished-at="2021-07-16T13:55:24Z" duration-ms="310507">
      <class name="com.fetchr.testcases.TermsAndConditionsPageTest">
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f]" started-at="2021-07-16T16:53:10Z" name="login" finished-at="2021-07-16T16:53:16Z" duration-ms="5662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="termsTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f]" started-at="2021-07-16T16:53:16Z" name="termsTitleTest" finished-at="2021-07-16T16:53:16Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- termsTitleTest -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f]" started-at="2021-07-16T16:53:16Z" name="close" finished-at="2021-07-16T16:53:17Z" duration-ms="863" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=termsTitleTest status=SUCCESS method=TermsAndConditionsPageTest.termsTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f]" started-at="2021-07-16T16:53:17Z" name="login" finished-at="2021-07-16T16:53:23Z" duration-ms="5953" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="termsUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f]" started-at="2021-07-16T16:53:23Z" name="termsUrlCheck" finished-at="2021-07-16T16:53:23Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- termsUrlCheck -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f]" started-at="2021-07-16T16:53:23Z" name="close" finished-at="2021-07-16T16:53:24Z" duration-ms="1359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=termsUrlCheck status=SUCCESS method=TermsAndConditionsPageTest.termsUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f]" started-at="2021-07-16T16:53:24Z" name="login" finished-at="2021-07-16T16:53:30Z" duration-ms="5696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="termsLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f]" started-at="2021-07-16T16:53:30Z" name="termsLogoCheck" finished-at="2021-07-16T16:53:30Z" duration-ms="36" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- termsLogoCheck -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f]" started-at="2021-07-16T16:53:30Z" name="close" finished-at="2021-07-16T16:53:31Z" duration-ms="852" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=termsLogoCheck status=SUCCESS method=TermsAndConditionsPageTest.termsLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f]" started-at="2021-07-16T16:53:31Z" name="login" finished-at="2021-07-16T16:53:37Z" duration-ms="5901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsSwitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="termsSwitchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f]" started-at="2021-07-16T16:53:37Z" name="termsSwitchLanguageToArabic" finished-at="2021-07-16T16:53:47Z" duration-ms="10361" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsSwitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//img[@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.pnghttps://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.png']"}
  (Session info: chrome=91.0.4472.124)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'DESKTOP-QAK2P13', ip: '192.168.1.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.124, chrome: {chromedriverVersion: 91.0.4472.101 (af52a90bf870..., userDataDir: C:\Users\QA\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:64464}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e071a23e4eab3a1ac9008ea5a099710d
*** Element info: {Using=xpath, value=//img[@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.pnghttps://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.png']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//img[@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.pnghttps://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.png']"}
  (Session info: chrome=91.0.4472.124)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'DESKTOP-QAK2P13', ip: '192.168.1.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.124, chrome: {chromedriverVersion: 91.0.4472.101 (af52a90bf870..., userDataDir: C:\Users\QA\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:64464}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e071a23e4eab3a1ac9008ea5a099710d
*** Element info: {Using=xpath, value=//img[@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.pnghttps://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.png']}
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
	at jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
	at com.sun.proxy.$Proxy14.findElement(Unknown Source)
	at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:194)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy18.isDisplayed(Unknown Source)
	at com.fetchr.pages.TermsAndConditionsPage.checkchangeLanguageToArabic(TermsAndConditionsPage.java:50)
	at com.fetchr.testcases.TermsAndConditionsPageTest.termsSwitchLanguageToArabic(TermsAndConditionsPageTest.java:93)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- termsSwitchLanguageToArabic -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f]" started-at="2021-07-16T16:53:47Z" name="close" finished-at="2021-07-16T16:53:48Z" duration-ms="900" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsSwitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=termsSwitchLanguageToArabic status=FAILURE method=TermsAndConditionsPageTest.termsSwitchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@5386659f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- com.fetchr.testcases.TermsAndConditionsPageTest -->
      <class name="com.fetchr.testcases.PrivacyPolicyPageTest">
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba]" started-at="2021-07-16T16:53:48Z" name="login" finished-at="2021-07-16T16:53:54Z" duration-ms="6040" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="privacyTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba]" started-at="2021-07-16T16:53:54Z" name="privacyTitleTest" finished-at="2021-07-16T16:53:54Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- privacyTitleTest -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba]" started-at="2021-07-16T16:53:54Z" name="close" finished-at="2021-07-16T16:53:55Z" duration-ms="870" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=privacyTitleTest status=SUCCESS method=PrivacyPolicyPageTest.privacyTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba]" started-at="2021-07-16T16:53:55Z" name="login" finished-at="2021-07-16T16:54:01Z" duration-ms="5704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="privacyUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba]" started-at="2021-07-16T16:54:01Z" name="privacyUrlCheck" finished-at="2021-07-16T16:54:01Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- privacyUrlCheck -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba]" started-at="2021-07-16T16:54:01Z" name="close" finished-at="2021-07-16T16:54:01Z" duration-ms="854" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=privacyUrlCheck status=SUCCESS method=PrivacyPolicyPageTest.privacyUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba]" started-at="2021-07-16T16:54:01Z" name="login" finished-at="2021-07-16T16:54:08Z" duration-ms="6311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="privacyLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba]" started-at="2021-07-16T16:54:08Z" name="privacyLogoCheck" finished-at="2021-07-16T16:54:08Z" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- privacyLogoCheck -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba]" started-at="2021-07-16T16:54:08Z" name="close" finished-at="2021-07-16T16:54:09Z" duration-ms="1310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=privacyLogoCheck status=SUCCESS method=PrivacyPolicyPageTest.privacyLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba]" started-at="2021-07-16T16:54:09Z" name="login" finished-at="2021-07-16T16:54:15Z" duration-ms="6034" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacySwitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="privacySwitchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba]" started-at="2021-07-16T16:54:15Z" name="privacySwitchLanguageToArabic" finished-at="2021-07-16T16:54:15Z" duration-ms="23" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacySwitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.InvalidSelectorException">
            <message>
              <![CDATA[invalid selector: Unable to locate an element with the xpath expression https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/lang_ar.svg because of the following error:
SyntaxError: Failed to execute 'evaluate' on 'Document': The string 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/lang_ar.svg' is not a valid XPath expression.
  (Session info: chrome=91.0.4472.124)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'DESKTOP-QAK2P13', ip: '192.168.1.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.124, chrome: {chromedriverVersion: 91.0.4472.101 (af52a90bf870..., userDataDir: C:\Users\QA\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:65403}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 2409206d59c003f576fc39c805706741
*** Element info: {Using=xpath, value=https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/lang_ar.svg}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidSelectorException: invalid selector: Unable to locate an element with the xpath expression https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/lang_ar.svg because of the following error:
SyntaxError: Failed to execute 'evaluate' on 'Document': The string 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/lang_ar.svg' is not a valid XPath expression.
  (Session info: chrome=91.0.4472.124)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'DESKTOP-QAK2P13', ip: '192.168.1.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.124, chrome: {chromedriverVersion: 91.0.4472.101 (af52a90bf870..., userDataDir: C:\Users\QA\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:65403}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 2409206d59c003f576fc39c805706741
*** Element info: {Using=xpath, value=https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/lang_ar.svg}
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
	at jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
	at com.sun.proxy.$Proxy14.findElement(Unknown Source)
	at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:194)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy18.click(Unknown Source)
	at com.fetchr.pages.PrivacyPolicyPage.checkchangeLanguageToArabic(PrivacyPolicyPage.java:49)
	at com.fetchr.testcases.PrivacyPolicyPageTest.privacySwitchLanguageToArabic(PrivacyPolicyPageTest.java:88)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidSelectorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- privacySwitchLanguageToArabic -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba]" started-at="2021-07-16T16:54:15Z" name="close" finished-at="2021-07-16T16:54:17Z" duration-ms="1370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacySwitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=privacySwitchLanguageToArabic status=FAILURE method=PrivacyPolicyPageTest.privacySwitchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@24569dba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- com.fetchr.testcases.PrivacyPolicyPageTest -->
      <class name="com.fetchr.testcases.CoronaSafetyPageTest">
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:54:17Z" name="setUp" finished-at="2021-07-16T16:54:23Z" duration-ms="6180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SafetyTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:54:23Z" name="SafetyTitleTest" finished-at="2021-07-16T16:54:27Z" duration-ms="3970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SafetyTitleTest -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:54:27Z" name="tearDown" finished-at="2021-07-16T16:54:28Z" duration-ms="873" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SafetyTitleTest status=SUCCESS method=CoronaSafetyPageTest.SafetyTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:54:28Z" name="setUp" finished-at="2021-07-16T16:54:34Z" duration-ms="5944" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyUrlCheck(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SafetyUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:54:34Z" name="SafetyUrlCheck" finished-at="2021-07-16T16:54:38Z" duration-ms="4161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyUrlCheck(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SafetyUrlCheck -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:54:38Z" name="tearDown" finished-at="2021-07-16T16:54:39Z" duration-ms="920" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyUrlCheck(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SafetyUrlCheck status=SUCCESS method=CoronaSafetyPageTest.SafetyUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:54:39Z" name="setUp" finished-at="2021-07-16T16:54:45Z" duration-ms="6387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SafetyLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:54:45Z" name="SafetyLogoCheck" finished-at="2021-07-16T16:54:49Z" duration-ms="3965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SafetyLogoCheck -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:54:49Z" name="tearDown" finished-at="2021-07-16T16:54:50Z" duration-ms="870" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SafetyLogoCheck status=SUCCESS method=CoronaSafetyPageTest.SafetyLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:54:50Z" name="setUp" finished-at="2021-07-16T16:54:55Z" duration-ms="5406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyswitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SafetyswitchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:54:55Z" name="SafetyswitchLanguageToArabic" finished-at="2021-07-16T16:55:01Z" duration-ms="6071" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyswitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SafetyswitchLanguageToArabic -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:55:01Z" name="tearDown" finished-at="2021-07-16T16:55:02Z" duration-ms="907" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyswitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SafetyswitchLanguageToArabic status=SUCCESS method=CoronaSafetyPageTest.SafetyswitchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:55:02Z" name="setUp" finished-at="2021-07-16T16:55:08Z" duration-ms="5719" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.checkSafetyFacebookIcon(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkSafetyFacebookIcon(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:55:08Z" name="checkSafetyFacebookIcon" finished-at="2021-07-16T16:55:12Z" duration-ms="4372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.checkSafetyFacebookIcon(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSafetyFacebookIcon -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:55:12Z" name="tearDown" finished-at="2021-07-16T16:55:13Z" duration-ms="961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.checkSafetyFacebookIcon(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=checkSafetyFacebookIcon status=SUCCESS method=CoronaSafetyPageTest.checkSafetyFacebookIcon(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:55:13Z" name="setUp" finished-at="2021-07-16T16:55:19Z" duration-ms="5521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.checkSafetyTwitterIcon(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkSafetyTwitterIcon(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:55:19Z" name="checkSafetyTwitterIcon" finished-at="2021-07-16T16:55:23Z" duration-ms="4139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.checkSafetyTwitterIcon(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSafetyTwitterIcon -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31]" started-at="2021-07-16T16:55:23Z" name="tearDown" finished-at="2021-07-16T16:55:24Z" duration-ms="993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.checkSafetyTwitterIcon(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=checkSafetyTwitterIcon status=SUCCESS method=CoronaSafetyPageTest.checkSafetyTwitterIcon(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@8462f31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.fetchr.testcases.CoronaSafetyPageTest -->
      <class name="com.fetchr.testcases.TrackingPageTest">
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:13Z" name="setUp" finished-at="2021-07-16T16:50:20Z" duration-ms="6779" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="trackingTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:20Z" name="trackingTitleTest" finished-at="2021-07-16T16:50:20Z" duration-ms="21" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trackingTitleTest -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:20Z" name="tearDown" finished-at="2021-07-16T16:50:22Z" duration-ms="1368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=trackingTitleTest status=SUCCESS method=TrackingPageTest.trackingTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:22Z" name="setUp" finished-at="2021-07-16T16:50:28Z" duration-ms="6337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="trackingUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:28Z" name="trackingUrlCheck" finished-at="2021-07-16T16:50:28Z" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trackingUrlCheck -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:28Z" name="tearDown" finished-at="2021-07-16T16:50:29Z" duration-ms="1333" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=trackingUrlCheck status=SUCCESS method=TrackingPageTest.trackingUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:29Z" name="setUp" finished-at="2021-07-16T16:50:35Z" duration-ms="5224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="trackingLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:35Z" name="trackingLogoCheck" finished-at="2021-07-16T16:50:35Z" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trackingLogoCheck -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:35Z" name="tearDown" finished-at="2021-07-16T16:50:36Z" duration-ms="1792" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=trackingLogoCheck status=SUCCESS method=TrackingPageTest.trackingLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:36Z" name="setUp" finished-at="2021-07-16T16:50:42Z" duration-ms="5266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.switchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="switchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:42Z" name="switchLanguageToArabic" finished-at="2021-07-16T16:50:52Z" duration-ms="10231" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.switchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//img [@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/logo-ar-fetchr.png']"}
  (Session info: chrome=91.0.4472.124)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'DESKTOP-QAK2P13', ip: '192.168.1.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.124, chrome: {chromedriverVersion: 91.0.4472.101 (af52a90bf870..., userDataDir: C:\Users\QA\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:54327}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e69c9597185445a2dfdd35ffab43fe2c
*** Element info: {Using=xpath, value=//img [@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/logo-ar-fetchr.png']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//img [@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/logo-ar-fetchr.png']"}
  (Session info: chrome=91.0.4472.124)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'DESKTOP-QAK2P13', ip: '192.168.1.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.124, chrome: {chromedriverVersion: 91.0.4472.101 (af52a90bf870..., userDataDir: C:\Users\QA\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:54327}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e69c9597185445a2dfdd35ffab43fe2c
*** Element info: {Using=xpath, value=//img [@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/logo-ar-fetchr.png']}
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
	at com.sun.proxy.$Proxy14.findElement(Unknown Source)
	at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:194)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy18.isDisplayed(Unknown Source)
	at com.fetchr.pages.TrackingPage.changeLanguageToArabic(TrackingPage.java:93)
	at com.fetchr.testcases.TrackingPageTest.switchLanguageToArabic(TrackingPageTest.java:100)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- switchLanguageToArabic -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:52Z" name="tearDown" finished-at="2021-07-16T16:50:53Z" duration-ms="1267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.switchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=switchLanguageToArabic status=FAILURE method=TrackingPageTest.switchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:54Z" name="setUp" finished-at="2021-07-16T16:50:59Z" duration-ms="5278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkTheStatusOfOrderByTrackingNum(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:59Z" name="checkTheStatusOfOrderByTrackingNum" data-provider="testData" finished-at="2021-07-16T16:50:59Z" duration-ms="335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34134180154194]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTheStatusOfOrderByTrackingNum -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:50:59Z" name="tearDown" finished-at="2021-07-16T16:51:01Z" duration-ms="1222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=checkTheStatusOfOrderByTrackingNum status=SUCCESS method=TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:01Z" name="setUp" finished-at="2021-07-16T16:51:06Z" duration-ms="5452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkTheStatusOfOrderByTrackingNum(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:06Z" name="checkTheStatusOfOrderByTrackingNum" data-provider="testData" finished-at="2021-07-16T16:51:07Z" duration-ms="458" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34124571209996]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTheStatusOfOrderByTrackingNum -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:07Z" name="tearDown" finished-at="2021-07-16T16:51:08Z" duration-ms="1279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=checkTheStatusOfOrderByTrackingNum status=SUCCESS method=TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:08Z" name="setUp" finished-at="2021-07-16T16:51:13Z" duration-ms="5326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnCoronaSafetyMessage(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickOnCoronaSafetyMessage(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:13Z" name="clickOnCoronaSafetyMessage" finished-at="2021-07-16T16:51:18Z" duration-ms="4424" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnCoronaSafetyMessage(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnCoronaSafetyMessage -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:18Z" name="tearDown" finished-at="2021-07-16T16:51:19Z" duration-ms="1147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnCoronaSafetyMessage(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickOnCoronaSafetyMessage status=SUCCESS method=TrackingPageTest.clickOnCoronaSafetyMessage(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:19Z" name="setUp" finished-at="2021-07-16T16:51:24Z" duration-ms="5290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.navigateToDeliveryMapsScreen(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="navigateToDeliveryMapsScreen(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:24Z" name="navigateToDeliveryMapsScreen" data-provider="testData2" finished-at="2021-07-16T16:51:25Z" duration-ms="1384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34152435932333]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.navigateToDeliveryMapsScreen(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToDeliveryMapsScreen -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:25Z" name="tearDown" finished-at="2021-07-16T16:51:27Z" duration-ms="1442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.navigateToDeliveryMapsScreen(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=navigateToDeliveryMapsScreen status=SUCCESS method=TrackingPageTest.navigateToDeliveryMapsScreen(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:27Z" name="setUp" finished-at="2021-07-16T16:51:32Z" duration-ms="5256" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkOrderHistory(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkOrderHistory(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:32Z" name="checkOrderHistory" data-provider="testData3" finished-at="2021-07-16T16:51:33Z" duration-ms="726" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34172147562365]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkOrderHistory(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOrderHistory -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:33Z" name="tearDown" finished-at="2021-07-16T16:51:35Z" duration-ms="1676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkOrderHistory(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=checkOrderHistory status=SUCCESS method=TrackingPageTest.checkOrderHistory(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:35Z" name="setUp" finished-at="2021-07-16T16:51:40Z" duration-ms="4948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkOrderHistory(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkOrderHistory(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:40Z" name="checkOrderHistory" data-provider="testData3" finished-at="2021-07-16T16:51:40Z" duration-ms="657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34125613330978]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkOrderHistory(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOrderHistory -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:40Z" name="tearDown" finished-at="2021-07-16T16:51:42Z" duration-ms="1790" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkOrderHistory(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=checkOrderHistory status=SUCCESS method=TrackingPageTest.checkOrderHistory(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:42Z" name="setUp" finished-at="2021-07-16T16:51:47Z" duration-ms="5345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchingForInvalidOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:47Z" name="searchingForInvalidOrderNumbers" data-provider="testData5" finished-at="2021-07-16T16:51:48Z" duration-ms="346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34151904217970000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchingForInvalidOrderNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:48Z" name="tearDown" finished-at="2021-07-16T16:51:49Z" duration-ms="1643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=searchingForInvalidOrderNumbers status=SUCCESS method=TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:49Z" name="setUp" finished-at="2021-07-16T16:51:55Z" duration-ms="5498" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchingForInvalidOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:55Z" name="searchingForInvalidOrderNumbers" data-provider="testData5" finished-at="2021-07-16T16:51:55Z" duration-ms="385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34124571209955]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchingForInvalidOrderNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:55Z" name="tearDown" finished-at="2021-07-16T16:51:57Z" duration-ms="1741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=searchingForInvalidOrderNumbers status=SUCCESS method=TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:51:57Z" name="setUp" finished-at="2021-07-16T16:52:02Z" duration-ms="5117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:02Z" name="enteringInvalidInputInOrderNumbers" data-provider="testData4" finished-at="2021-07-16T16:52:02Z" duration-ms="212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[!#$%^&*())_)_]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enteringInvalidInputInOrderNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:02Z" name="tearDown" finished-at="2021-07-16T16:52:04Z" duration-ms="1237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=enteringInvalidInputInOrderNumbers status=SUCCESS method=TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:04Z" name="setUp" finished-at="2021-07-16T16:52:09Z" duration-ms="5423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:09Z" name="enteringInvalidInputInOrderNumbers" data-provider="testData4" finished-at="2021-07-16T16:52:09Z" duration-ms="182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wrrwwwrwrw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enteringInvalidInputInOrderNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:09Z" name="tearDown" finished-at="2021-07-16T16:52:11Z" duration-ms="1691" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=enteringInvalidInputInOrderNumbers status=SUCCESS method=TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:11Z" name="setUp" finished-at="2021-07-16T16:52:16Z" duration-ms="5342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:16Z" name="enteringInvalidInputInOrderNumbers" data-provider="testData4" finished-at="2021-07-16T16:52:16Z" duration-ms="200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[^^^^(9283883##]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enteringInvalidInputInOrderNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:16Z" name="tearDown" finished-at="2021-07-16T16:52:18Z" duration-ms="1257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=enteringInvalidInputInOrderNumbers status=SUCCESS method=TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:18Z" name="setUp" finished-at="2021-07-16T16:52:23Z" duration-ms="5127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:23Z" name="enteringInvalidInputInOrderNumbers" data-provider="testData4" finished-at="2021-07-16T16:52:23Z" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WWWR3333]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enteringInvalidInputInOrderNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:23Z" name="tearDown" finished-at="2021-07-16T16:52:25Z" duration-ms="1716" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=enteringInvalidInputInOrderNumbers status=SUCCESS method=TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:25Z" name="setUp" finished-at="2021-07-16T16:52:30Z" duration-ms="5845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:30Z" name="enteringInvalidInputInOrderNumbers" data-provider="testData4" finished-at="2021-07-16T16:52:31Z" duration-ms="200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[33333##WW]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enteringInvalidInputInOrderNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:31Z" name="tearDown" finished-at="2021-07-16T16:52:32Z" duration-ms="1682" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=enteringInvalidInputInOrderNumbers status=SUCCESS method=TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:32Z" name="setUp" finished-at="2021-07-16T16:52:38Z" duration-ms="5616" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchForEmptyOrderTrackingNumbers(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchForEmptyOrderTrackingNumbers(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:38Z" name="searchForEmptyOrderTrackingNumbers" finished-at="2021-07-16T16:52:38Z" duration-ms="154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchForEmptyOrderTrackingNumbers(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForEmptyOrderTrackingNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:38Z" name="tearDown" finished-at="2021-07-16T16:52:40Z" duration-ms="1690" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchForEmptyOrderTrackingNumbers(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=searchForEmptyOrderTrackingNumbers status=SUCCESS method=TrackingPageTest.searchForEmptyOrderTrackingNumbers(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:40Z" name="setUp" finished-at="2021-07-16T16:52:45Z" duration-ms="5237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="NavigatetoRescheduleOrderScreem(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:45Z" name="NavigatetoRescheduleOrderScreem" data-provider="testData3" finished-at="2021-07-16T16:52:47Z" duration-ms="1552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34172147562365]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoRescheduleOrderScreem -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:47Z" name="tearDown" finished-at="2021-07-16T16:52:48Z" duration-ms="1311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=NavigatetoRescheduleOrderScreem status=SUCCESS method=TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:48Z" name="setUp" finished-at="2021-07-16T16:52:53Z" duration-ms="5501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="NavigatetoRescheduleOrderScreem(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:53Z" name="NavigatetoRescheduleOrderScreem" data-provider="testData3" finished-at="2021-07-16T16:52:55Z" duration-ms="1929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34125613330978]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoRescheduleOrderScreem -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:55Z" name="tearDown" finished-at="2021-07-16T16:52:57Z" duration-ms="1766" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=NavigatetoRescheduleOrderScreem status=SUCCESS method=TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:52:57Z" name="setUp" finished-at="2021-07-16T16:53:02Z" duration-ms="5186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnPrivacyPolicy(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickOnPrivacyPolicy(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:53:02Z" name="clickOnPrivacyPolicy" finished-at="2021-07-16T16:53:03Z" duration-ms="537" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnPrivacyPolicy(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnPrivacyPolicy -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:53:03Z" name="tearDown" finished-at="2021-07-16T16:53:04Z" duration-ms="917" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnPrivacyPolicy(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickOnPrivacyPolicy status=SUCCESS method=TrackingPageTest.clickOnPrivacyPolicy(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:53:04Z" name="setUp" finished-at="2021-07-16T16:53:09Z" duration-ms="5209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnTermsAndConditions(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickOnTermsAndConditions(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:53:09Z" name="clickOnTermsAndConditions" finished-at="2021-07-16T16:53:10Z" duration-ms="513" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnTermsAndConditions(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnTermsAndConditions -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e]" started-at="2021-07-16T16:53:10Z" name="tearDown" finished-at="2021-07-16T16:53:10Z" duration-ms="885" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnTermsAndConditions(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickOnTermsAndConditions status=SUCCESS method=TrackingPageTest.clickOnTermsAndConditions(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@4d1c005e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.fetchr.testcases.TrackingPageTest -->
    </test> <!-- End to End Test on chrome -->
    <test started-at="2021-07-16T13:55:24Z" name="End to End Test on firefox" finished-at="2021-07-16T14:03:26Z" duration-ms="481599">
      <class name="com.fetchr.testcases.TermsAndConditionsPageTest">
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63]" started-at="2021-07-16T16:59:54Z" name="login" finished-at="2021-07-16T17:00:04Z" duration-ms="10204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="termsTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63]" started-at="2021-07-16T17:00:04Z" name="termsTitleTest" finished-at="2021-07-16T17:00:04Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- termsTitleTest -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63]" started-at="2021-07-16T17:00:04Z" name="close" finished-at="2021-07-16T17:00:06Z" duration-ms="2025" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=termsTitleTest status=SUCCESS method=TermsAndConditionsPageTest.termsTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63]" started-at="2021-07-16T17:00:06Z" name="login" finished-at="2021-07-16T17:00:17Z" duration-ms="10421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="termsUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63]" started-at="2021-07-16T17:00:17Z" name="termsUrlCheck" finished-at="2021-07-16T17:00:17Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- termsUrlCheck -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63]" started-at="2021-07-16T17:00:17Z" name="close" finished-at="2021-07-16T17:00:18Z" duration-ms="1574" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=termsUrlCheck status=SUCCESS method=TermsAndConditionsPageTest.termsUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63]" started-at="2021-07-16T17:00:18Z" name="login" finished-at="2021-07-16T17:00:28Z" duration-ms="9752" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="termsLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63]" started-at="2021-07-16T17:00:28Z" name="termsLogoCheck" finished-at="2021-07-16T17:00:28Z" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- termsLogoCheck -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63]" started-at="2021-07-16T17:00:28Z" name="close" finished-at="2021-07-16T17:00:30Z" duration-ms="1572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=termsLogoCheck status=SUCCESS method=TermsAndConditionsPageTest.termsLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63]" started-at="2021-07-16T17:00:30Z" name="login" finished-at="2021-07-16T17:00:40Z" duration-ms="9779" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsSwitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="termsSwitchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63]" started-at="2021-07-16T17:00:40Z" name="termsSwitchLanguageToArabic" finished-at="2021-07-16T17:00:50Z" duration-ms="10504" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsSwitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //img[@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.pnghttps://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.png']
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'DESKTOP-QAK2P13', ip: '192.168.1.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 89.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20210622155641, moz:geckodriverVersion: 0.29.0, moz:headless: false, moz:processID: 15916, moz:profile: C:\Users\QA\AppData\Local\T..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: b58e2b1d-9580-4562-8ed5-3a7340199f20
*** Element info: {Using=xpath, value=//img[@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.pnghttps://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.png']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //img[@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.pnghttps://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.png']
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'DESKTOP-QAK2P13', ip: '192.168.1.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 89.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20210622155641, moz:geckodriverVersion: 0.29.0, moz:headless: false, moz:processID: 15916, moz:profile: C:\Users\QA\AppData\Local\T..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: b58e2b1d-9580-4562-8ed5-3a7340199f20
*** Element info: {Using=xpath, value=//img[@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.pnghttps://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/icn_language_english.png']}
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
	at jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
	at com.sun.proxy.$Proxy21.findElement(Unknown Source)
	at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:194)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy18.isDisplayed(Unknown Source)
	at com.fetchr.pages.TermsAndConditionsPage.checkchangeLanguageToArabic(TermsAndConditionsPage.java:50)
	at com.fetchr.testcases.TermsAndConditionsPageTest.termsSwitchLanguageToArabic(TermsAndConditionsPageTest.java:93)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- termsSwitchLanguageToArabic -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63]" started-at="2021-07-16T17:00:50Z" name="close" finished-at="2021-07-16T17:00:51Z" duration-ms="1244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TermsAndConditionsPageTest.termsSwitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=termsSwitchLanguageToArabic status=FAILURE method=TermsAndConditionsPageTest.termsSwitchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TermsAndConditionsPageTest@25be7b63] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- com.fetchr.testcases.TermsAndConditionsPageTest -->
      <class name="com.fetchr.testcases.PrivacyPolicyPageTest">
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd]" started-at="2021-07-16T17:00:51Z" name="login" finished-at="2021-07-16T17:01:01Z" duration-ms="9210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="privacyTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd]" started-at="2021-07-16T17:01:01Z" name="privacyTitleTest" finished-at="2021-07-16T17:01:01Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- privacyTitleTest -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd]" started-at="2021-07-16T17:01:01Z" name="close" finished-at="2021-07-16T17:01:02Z" duration-ms="1817" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=privacyTitleTest status=SUCCESS method=PrivacyPolicyPageTest.privacyTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd]" started-at="2021-07-16T17:01:02Z" name="login" finished-at="2021-07-16T17:01:12Z" duration-ms="9484" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="privacyUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd]" started-at="2021-07-16T17:01:12Z" name="privacyUrlCheck" finished-at="2021-07-16T17:01:12Z" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- privacyUrlCheck -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd]" started-at="2021-07-16T17:01:12Z" name="close" finished-at="2021-07-16T17:01:14Z" duration-ms="2172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=privacyUrlCheck status=SUCCESS method=PrivacyPolicyPageTest.privacyUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd]" started-at="2021-07-16T17:01:14Z" name="login" finished-at="2021-07-16T17:01:24Z" duration-ms="10418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="privacyLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd]" started-at="2021-07-16T17:01:24Z" name="privacyLogoCheck" finished-at="2021-07-16T17:01:25Z" duration-ms="34" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- privacyLogoCheck -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd]" started-at="2021-07-16T17:01:25Z" name="close" finished-at="2021-07-16T17:01:26Z" duration-ms="1694" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacyLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=privacyLogoCheck status=SUCCESS method=PrivacyPolicyPageTest.privacyLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd]" started-at="2021-07-16T17:01:26Z" name="login" finished-at="2021-07-16T17:01:37Z" duration-ms="10370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacySwitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="privacySwitchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd]" started-at="2021-07-16T17:01:37Z" name="privacySwitchLanguageToArabic" finished-at="2021-07-16T17:01:37Z" duration-ms="18" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacySwitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.InvalidSelectorException">
            <message>
              <![CDATA[Given xpath expression "https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/lang_ar.svg" is invalid: SyntaxError: The expression is not a legal expression.
For documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'DESKTOP-QAK2P13', ip: '192.168.1.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 89.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20210622155641, moz:geckodriverVersion: 0.29.0, moz:headless: false, moz:processID: 10516, moz:profile: C:\Users\QA\AppData\Local\T..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 193fbfe6-b777-4ff5-8b3f-b52c0fcc4e41
*** Element info: {Using=xpath, value=https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/lang_ar.svg}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidSelectorException: Given xpath expression "https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/lang_ar.svg" is invalid: SyntaxError: The expression is not a legal expression.
For documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'DESKTOP-QAK2P13', ip: '192.168.1.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 89.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20210622155641, moz:geckodriverVersion: 0.29.0, moz:headless: false, moz:processID: 10516, moz:profile: C:\Users\QA\AppData\Local\T..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 193fbfe6-b777-4ff5-8b3f-b52c0fcc4e41
*** Element info: {Using=xpath, value=https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/lang_ar.svg}
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
	at jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
	at com.sun.proxy.$Proxy21.findElement(Unknown Source)
	at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:194)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy18.click(Unknown Source)
	at com.fetchr.pages.PrivacyPolicyPage.checkchangeLanguageToArabic(PrivacyPolicyPage.java:49)
	at com.fetchr.testcases.PrivacyPolicyPageTest.privacySwitchLanguageToArabic(PrivacyPolicyPageTest.java:88)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidSelectorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- privacySwitchLanguageToArabic -->
        <test-method is-config="true" signature="close(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd]" started-at="2021-07-16T17:01:37Z" name="close" finished-at="2021-07-16T17:01:38Z" duration-ms="1648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.PrivacyPolicyPageTest.privacySwitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=privacySwitchLanguageToArabic status=FAILURE method=PrivacyPolicyPageTest.privacySwitchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.PrivacyPolicyPageTest@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- com.fetchr.testcases.PrivacyPolicyPageTest -->
      <class name="com.fetchr.testcases.CoronaSafetyPageTest">
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:01:38Z" name="setUp" finished-at="2021-07-16T17:01:47Z" duration-ms="8579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SafetyTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:01:47Z" name="SafetyTitleTest" finished-at="2021-07-16T17:01:56Z" duration-ms="9587" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SafetyTitleTest -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:01:56Z" name="tearDown" finished-at="2021-07-16T17:01:58Z" duration-ms="1896" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SafetyTitleTest status=SUCCESS method=CoronaSafetyPageTest.SafetyTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:01:58Z" name="setUp" finished-at="2021-07-16T17:02:08Z" duration-ms="9546" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyUrlCheck(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SafetyUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:02:08Z" name="SafetyUrlCheck" finished-at="2021-07-16T17:02:10Z" duration-ms="2058" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyUrlCheck(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SafetyUrlCheck -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:02:10Z" name="tearDown" finished-at="2021-07-16T17:02:18Z" duration-ms="7841" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyUrlCheck(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SafetyUrlCheck status=SUCCESS method=CoronaSafetyPageTest.SafetyUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:02:18Z" name="setUp" finished-at="2021-07-16T17:02:27Z" duration-ms="8889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SafetyLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:02:27Z" name="SafetyLogoCheck" finished-at="2021-07-16T17:02:29Z" duration-ms="2240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SafetyLogoCheck -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:02:29Z" name="tearDown" finished-at="2021-07-16T17:02:31Z" duration-ms="1873" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SafetyLogoCheck status=SUCCESS method=CoronaSafetyPageTest.SafetyLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:02:31Z" name="setUp" finished-at="2021-07-16T17:02:40Z" duration-ms="9113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyswitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SafetyswitchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:02:40Z" name="SafetyswitchLanguageToArabic" finished-at="2021-07-16T17:02:51Z" duration-ms="11149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyswitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SafetyswitchLanguageToArabic -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:02:51Z" name="tearDown" finished-at="2021-07-16T17:02:53Z" duration-ms="1773" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.SafetyswitchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SafetyswitchLanguageToArabic status=SUCCESS method=CoronaSafetyPageTest.SafetyswitchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:02:53Z" name="setUp" finished-at="2021-07-16T17:03:03Z" duration-ms="9859" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.checkSafetyFacebookIcon(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkSafetyFacebookIcon(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:03:03Z" name="checkSafetyFacebookIcon" finished-at="2021-07-16T17:03:10Z" duration-ms="7172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.checkSafetyFacebookIcon(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSafetyFacebookIcon -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:03:10Z" name="tearDown" finished-at="2021-07-16T17:03:12Z" duration-ms="2525" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.checkSafetyFacebookIcon(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=checkSafetyFacebookIcon status=SUCCESS method=CoronaSafetyPageTest.checkSafetyFacebookIcon(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:03:12Z" name="setUp" finished-at="2021-07-16T17:03:21Z" duration-ms="8942" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.checkSafetyTwitterIcon(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkSafetyTwitterIcon(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:03:21Z" name="checkSafetyTwitterIcon" finished-at="2021-07-16T17:03:24Z" duration-ms="2565" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.checkSafetyTwitterIcon(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSafetyTwitterIcon -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20]" started-at="2021-07-16T17:03:24Z" name="tearDown" finished-at="2021-07-16T17:03:26Z" duration-ms="1722" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.CoronaSafetyPageTest.checkSafetyTwitterIcon(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=checkSafetyTwitterIcon status=SUCCESS method=CoronaSafetyPageTest.checkSafetyTwitterIcon(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.CoronaSafetyPageTest@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.fetchr.testcases.CoronaSafetyPageTest -->
      <class name="com.fetchr.testcases.TrackingPageTest">
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:55:24Z" name="setUp" finished-at="2021-07-16T16:55:34Z" duration-ms="9972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="trackingTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:55:34Z" name="trackingTitleTest" finished-at="2021-07-16T16:55:34Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trackingTitleTest -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:55:34Z" name="tearDown" finished-at="2021-07-16T16:55:36Z" duration-ms="2165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingTitleTest(java.lang.reflect.Method) throws java.io.IOException,atu.testrecorder.exceptions.ATUTestRecorderException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=trackingTitleTest status=SUCCESS method=TrackingPageTest.trackingTitleTest(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:55:36Z" name="setUp" finished-at="2021-07-16T16:55:45Z" duration-ms="8974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="trackingUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:55:45Z" name="trackingUrlCheck" finished-at="2021-07-16T16:55:45Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trackingUrlCheck -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:55:45Z" name="tearDown" finished-at="2021-07-16T16:55:47Z" duration-ms="2062" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingUrlCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=trackingUrlCheck status=SUCCESS method=TrackingPageTest.trackingUrlCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:55:47Z" name="setUp" finished-at="2021-07-16T16:55:56Z" duration-ms="8612" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="trackingLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:55:56Z" name="trackingLogoCheck" finished-at="2021-07-16T16:55:56Z" duration-ms="329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trackingLogoCheck -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:55:56Z" name="tearDown" finished-at="2021-07-16T16:55:58Z" duration-ms="1845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.trackingLogoCheck(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=trackingLogoCheck status=SUCCESS method=TrackingPageTest.trackingLogoCheck(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:55:58Z" name="setUp" finished-at="2021-07-16T16:56:06Z" duration-ms="8292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.switchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="switchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:56:06Z" name="switchLanguageToArabic" finished-at="2021-07-16T16:56:18Z" duration-ms="11405" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.switchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //img [@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/logo-ar-fetchr.png']
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'DESKTOP-QAK2P13', ip: '192.168.1.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 89.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20210622155641, moz:geckodriverVersion: 0.29.0, moz:headless: false, moz:processID: 19252, moz:profile: C:\Users\QA\AppData\Local\T..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: f762268a-a512-402a-aede-5d13f93f0131
*** Element info: {Using=xpath, value=//img [@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/logo-ar-fetchr.png']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //img [@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/logo-ar-fetchr.png']
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'DESKTOP-QAK2P13', ip: '192.168.1.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 89.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20210622155641, moz:geckodriverVersion: 0.29.0, moz:headless: false, moz:processID: 19252, moz:profile: C:\Users\QA\AppData\Local\T..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: f762268a-a512-402a-aede-5d13f93f0131
*** Element info: {Using=xpath, value=//img [@src = 'https://s3-eu-west-1.amazonaws.com/staticprod.fetchr.us/mweb_master/image/logo-ar-fetchr.png']}
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
	at jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
	at com.sun.proxy.$Proxy21.findElement(Unknown Source)
	at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:194)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy18.isDisplayed(Unknown Source)
	at com.fetchr.pages.TrackingPage.changeLanguageToArabic(TrackingPage.java:93)
	at com.fetchr.testcases.TrackingPageTest.switchLanguageToArabic(TrackingPageTest.java:100)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- switchLanguageToArabic -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:56:18Z" name="tearDown" finished-at="2021-07-16T16:56:19Z" duration-ms="1668" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.switchLanguageToArabic(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=switchLanguageToArabic status=FAILURE method=TrackingPageTest.switchLanguageToArabic(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:56:19Z" name="setUp" finished-at="2021-07-16T16:56:28Z" duration-ms="9075" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkTheStatusOfOrderByTrackingNum(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:56:28Z" name="checkTheStatusOfOrderByTrackingNum" data-provider="testData" finished-at="2021-07-16T16:56:29Z" duration-ms="340" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34134180154194]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTheStatusOfOrderByTrackingNum -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:56:29Z" name="tearDown" finished-at="2021-07-16T16:56:31Z" duration-ms="1987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=checkTheStatusOfOrderByTrackingNum status=SUCCESS method=TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:56:31Z" name="setUp" finished-at="2021-07-16T16:56:39Z" duration-ms="8530" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkTheStatusOfOrderByTrackingNum(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:56:39Z" name="checkTheStatusOfOrderByTrackingNum" data-provider="testData" finished-at="2021-07-16T16:56:40Z" duration-ms="361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34124571209996]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTheStatusOfOrderByTrackingNum -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:56:40Z" name="tearDown" finished-at="2021-07-16T16:56:41Z" duration-ms="1739" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=checkTheStatusOfOrderByTrackingNum status=SUCCESS method=TrackingPageTest.checkTheStatusOfOrderByTrackingNum(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:56:41Z" name="setUp" finished-at="2021-07-16T16:56:50Z" duration-ms="8807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnCoronaSafetyMessage(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickOnCoronaSafetyMessage(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:56:50Z" name="clickOnCoronaSafetyMessage" finished-at="2021-07-16T16:56:52Z" duration-ms="1881" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnCoronaSafetyMessage(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnCoronaSafetyMessage -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:56:52Z" name="tearDown" finished-at="2021-07-16T16:57:00Z" duration-ms="8118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnCoronaSafetyMessage(java.lang.reflect.Method) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickOnCoronaSafetyMessage status=SUCCESS method=TrackingPageTest.clickOnCoronaSafetyMessage(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:00Z" name="setUp" finished-at="2021-07-16T16:57:09Z" duration-ms="8629" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.navigateToDeliveryMapsScreen(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="navigateToDeliveryMapsScreen(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:09Z" name="navigateToDeliveryMapsScreen" data-provider="testData2" finished-at="2021-07-16T16:57:10Z" duration-ms="900" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34152435932333]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.navigateToDeliveryMapsScreen(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToDeliveryMapsScreen -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:10Z" name="tearDown" finished-at="2021-07-16T16:57:12Z" duration-ms="1935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.navigateToDeliveryMapsScreen(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=navigateToDeliveryMapsScreen status=SUCCESS method=TrackingPageTest.navigateToDeliveryMapsScreen(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:12Z" name="setUp" finished-at="2021-07-16T16:57:20Z" duration-ms="8623" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkOrderHistory(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkOrderHistory(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:20Z" name="checkOrderHistory" data-provider="testData3" finished-at="2021-07-16T16:57:22Z" duration-ms="1292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34172147562365]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkOrderHistory(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOrderHistory -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:22Z" name="tearDown" finished-at="2021-07-16T16:57:24Z" duration-ms="2479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkOrderHistory(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=checkOrderHistory status=SUCCESS method=TrackingPageTest.checkOrderHistory(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:24Z" name="setUp" finished-at="2021-07-16T16:57:33Z" duration-ms="9095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkOrderHistory(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkOrderHistory(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:33Z" name="checkOrderHistory" data-provider="testData3" finished-at="2021-07-16T16:57:34Z" duration-ms="700" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34125613330978]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkOrderHistory(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOrderHistory -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:34Z" name="tearDown" finished-at="2021-07-16T16:57:36Z" duration-ms="2374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.checkOrderHistory(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=checkOrderHistory status=SUCCESS method=TrackingPageTest.checkOrderHistory(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:36Z" name="setUp" finished-at="2021-07-16T16:57:45Z" duration-ms="8534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchingForInvalidOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:45Z" name="searchingForInvalidOrderNumbers" data-provider="testData5" finished-at="2021-07-16T16:57:45Z" duration-ms="391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34151904217970000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchingForInvalidOrderNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:45Z" name="tearDown" finished-at="2021-07-16T16:57:47Z" duration-ms="1834" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=searchingForInvalidOrderNumbers status=SUCCESS method=TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:47Z" name="setUp" finished-at="2021-07-16T16:57:56Z" duration-ms="8685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchingForInvalidOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:56Z" name="searchingForInvalidOrderNumbers" data-provider="testData5" finished-at="2021-07-16T16:57:56Z" duration-ms="565" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34124571209955]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchingForInvalidOrderNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:56Z" name="tearDown" finished-at="2021-07-16T16:57:58Z" duration-ms="1584" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=searchingForInvalidOrderNumbers status=SUCCESS method=TrackingPageTest.searchingForInvalidOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:57:58Z" name="setUp" finished-at="2021-07-16T16:58:08Z" duration-ms="9794" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:08Z" name="enteringInvalidInputInOrderNumbers" data-provider="testData4" finished-at="2021-07-16T16:58:09Z" duration-ms="905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[!#$%^&*())_)_]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enteringInvalidInputInOrderNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:09Z" name="tearDown" finished-at="2021-07-16T16:58:10Z" duration-ms="1786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=enteringInvalidInputInOrderNumbers status=SUCCESS method=TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:10Z" name="setUp" finished-at="2021-07-16T16:58:19Z" duration-ms="8760" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:19Z" name="enteringInvalidInputInOrderNumbers" data-provider="testData4" finished-at="2021-07-16T16:58:20Z" duration-ms="446" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wrrwwwrwrw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enteringInvalidInputInOrderNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:20Z" name="tearDown" finished-at="2021-07-16T16:58:22Z" duration-ms="1911" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=enteringInvalidInputInOrderNumbers status=SUCCESS method=TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:22Z" name="setUp" finished-at="2021-07-16T16:58:31Z" duration-ms="8995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:31Z" name="enteringInvalidInputInOrderNumbers" data-provider="testData4" finished-at="2021-07-16T16:58:31Z" duration-ms="487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[^^^^(9283883##]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enteringInvalidInputInOrderNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:31Z" name="tearDown" finished-at="2021-07-16T16:58:33Z" duration-ms="1698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=enteringInvalidInputInOrderNumbers status=SUCCESS method=TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:33Z" name="setUp" finished-at="2021-07-16T16:58:42Z" duration-ms="9435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:42Z" name="enteringInvalidInputInOrderNumbers" data-provider="testData4" finished-at="2021-07-16T16:58:43Z" duration-ms="407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WWWR3333]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enteringInvalidInputInOrderNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:43Z" name="tearDown" finished-at="2021-07-16T16:58:44Z" duration-ms="1641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=enteringInvalidInputInOrderNumbers status=SUCCESS method=TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:44Z" name="setUp" finished-at="2021-07-16T16:58:53Z" duration-ms="8634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:53Z" name="enteringInvalidInputInOrderNumbers" data-provider="testData4" finished-at="2021-07-16T16:58:53Z" duration-ms="429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[33333##WW]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enteringInvalidInputInOrderNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:53Z" name="tearDown" finished-at="2021-07-16T16:58:55Z" duration-ms="1769" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=enteringInvalidInputInOrderNumbers status=SUCCESS method=TrackingPageTest.enteringInvalidInputInOrderNumbers(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:58:55Z" name="setUp" finished-at="2021-07-16T16:59:04Z" duration-ms="8697" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchForEmptyOrderTrackingNumbers(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchForEmptyOrderTrackingNumbers(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:59:04Z" name="searchForEmptyOrderTrackingNumbers" finished-at="2021-07-16T16:59:04Z" duration-ms="511" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchForEmptyOrderTrackingNumbers(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForEmptyOrderTrackingNumbers -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:59:04Z" name="tearDown" finished-at="2021-07-16T16:59:06Z" duration-ms="2157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.searchForEmptyOrderTrackingNumbers(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=searchForEmptyOrderTrackingNumbers status=SUCCESS method=TrackingPageTest.searchForEmptyOrderTrackingNumbers(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:59:06Z" name="setUp" finished-at="2021-07-16T16:59:16Z" duration-ms="9012" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="NavigatetoRescheduleOrderScreem(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:59:16Z" name="NavigatetoRescheduleOrderScreem" data-provider="testData3" finished-at="2021-07-16T16:59:17Z" duration-ms="1463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34172147562365]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoRescheduleOrderScreem -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:59:17Z" name="tearDown" finished-at="2021-07-16T16:59:18Z" duration-ms="1524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=NavigatetoRescheduleOrderScreem status=SUCCESS method=TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:59:18Z" name="setUp" finished-at="2021-07-16T16:59:28Z" duration-ms="9227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="NavigatetoRescheduleOrderScreem(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:59:28Z" name="NavigatetoRescheduleOrderScreem" data-provider="testData3" finished-at="2021-07-16T16:59:29Z" duration-ms="1675" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[34125613330978]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoRescheduleOrderScreem -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:59:29Z" name="tearDown" finished-at="2021-07-16T16:59:31Z" duration-ms="1769" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String,java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=NavigatetoRescheduleOrderScreem status=SUCCESS method=TrackingPageTest.NavigatetoRescheduleOrderScreem(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:59:31Z" name="setUp" finished-at="2021-07-16T16:59:40Z" duration-ms="8721" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnPrivacyPolicy(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickOnPrivacyPolicy(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:59:40Z" name="clickOnPrivacyPolicy" finished-at="2021-07-16T16:59:41Z" duration-ms="664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnPrivacyPolicy(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnPrivacyPolicy -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:59:41Z" name="tearDown" finished-at="2021-07-16T16:59:42Z" duration-ms="1817" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnPrivacyPolicy(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickOnPrivacyPolicy status=SUCCESS method=TrackingPageTest.clickOnPrivacyPolicy(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:59:42Z" name="setUp" finished-at="2021-07-16T16:59:52Z" duration-ms="9349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnTermsAndConditions(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickOnTermsAndConditions(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:59:52Z" name="clickOnTermsAndConditions" finished-at="2021-07-16T16:59:52Z" duration-ms="573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnTermsAndConditions(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnTermsAndConditions -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c]" started-at="2021-07-16T16:59:52Z" name="tearDown" finished-at="2021-07-16T16:59:54Z" duration-ms="1935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fetchr.testcases.TrackingPageTest.clickOnTermsAndConditions(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickOnTermsAndConditions status=SUCCESS method=TrackingPageTest.clickOnTermsAndConditions(java.lang.reflect.Method)[pri:0, instance:com.fetchr.testcases.TrackingPageTest@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.fetchr.testcases.TrackingPageTest -->
      <class name="com.fetchr.testcases.config">
        <test-method is-config="true" signature="start()[pri:0, instance:com.fetchr.testcases.config@4c163e3]" started-at="2021-07-16T16:50:13Z" name="start" finished-at="2021-07-16T16:50:13Z" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method is-config="true" signature="End()[pri:0, instance:com.fetchr.testcases.config@4c163e3]" started-at="2021-07-16T17:03:26Z" name="End" finished-at="2021-07-16T17:03:26Z" duration-ms="281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- End -->
      </class> <!-- com.fetchr.testcases.config -->
    </test> <!-- End to End Test on firefox -->
  </suite> <!-- FetchrWebsite -->
</testng-results>
